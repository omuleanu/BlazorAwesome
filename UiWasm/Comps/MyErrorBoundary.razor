@inherits ErrorBoundary
@if (receivedExceptions.Any())
{
    <OPopup @ref="popup1" Opt="@(new(){ AutoOpen = true, Modal = true, OutClickClose = true, Width = 700, Title = "Error occurred" })">
        <div>
            @foreach (var exception in receivedExceptions)
            {
                <div class="received-exception" style="background-color: rgba(255,255,255,0.3); margin: 0.5rem; padding: 0.5rem;">
                    @exception.Message
                    <h5>
                        StackTrace:
                    </h5>                    
                    <pre>
                    @exception.StackTrace
                    </pre>
                </div>
            }
        </div>
    </OPopup>
}

@if (CurrentException is null)
{
    @ChildContent
}
else if (ErrorContent is not null)
{
    @ErrorContent(CurrentException)
}
else
{
    <div class="blazor-error-boundary">Unhandled error occured, please reload page.</div>
}

@code {
    private OPopup popup1;
    private List<Exception> receivedExceptions = new();

    protected override Task OnErrorAsync(Exception exception)
    {
        receivedExceptions.Add(exception);
        return base.OnErrorAsync(exception);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        receivedExceptions.Clear();
        
        base.OnAfterRender(firstRender);
    }

    public new void Recover()
    {
        receivedExceptions.Clear();
        base.Recover();
    }
}